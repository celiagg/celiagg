name: Publish release to PyPI

on:
  release:
    types: [published]

env:
  INSTALL_EDM_VERSION: 3.3.1

jobs:
  build-sdist:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the release commit
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install Python packages needed for sdist build and upload
      run: python -m pip install build twine

    - name: Build sdist
      run: python -m build --sdist

    # - name: Publish sdist to PyPI
    #   env:
    #     TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
    #     TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
    #   run: |
    #     edm run -- python -m twine check dist/*.tar.gz
    #     edm run -- python -m twine upload dist/*.tar.gz

  build-wheel-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the release commit
      uses: actions/checkout@v3
    - name: Build manylinux Python wheels
      uses: RalfG/python-wheels-manylinux-build@v0.5.0
      with:
        python-versions: 'cp36-cp36m cp37-cp37m cp38-cp38 cp39-cp39 cp310-cp310 cp311-cp311'
        build-requirements: 'cython numpy'
        system-packages: 'zlib-devel'
        pre-build-command: 'sh ci/build-wheel-deps.sh'
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    - name: Install Python packages needed for wheel upload
      run: |
        python -m pip install --upgrade pip setuptools
        python -m pip install twine
    # - name: Publish wheels to PyPI
    #   env:
    #     TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
    #     TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
    #   run: |
    #     python -m twine check dist/*-manylinux*.whl
    #     python -m twine upload dist/*-manylinux*.whl

  build-wheel-all:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:

    - name: Check out the release commit
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        platforms: arm64
      if: runner.os == 'Linux'

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Python packages needed for wheel build and upload
      run: python -m pip install twine

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.9.0
      env:
        CIBW_SKIP: "{*-musllinux-*,*_ppc64le,*_s390x,*_i686}"

    - name: Archive build
      uses: actions/upload-artifact@v3
      with:
        name: html-doc-bundle
        path: docs/build/html
        # don't need these kept for long
        retention-days: 7

    # - name: Check and upload wheels
    #   env:
    #     TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
    #     TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
    #   run: |
    #     python -m twine check --strict wheelhouse/*.whl
    #     python -m twine upload wheelhouse/*.whl
