name: Publish release to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-and-publish-wheel-all:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Check out the release commit
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        platforms: arm64
      if: runner.os == 'Linux'

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.18.1

    - name: Archive build
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: wheelhouse
        # don't need these kept for long
        retention-days: 7

    - name: Check and upload wheels
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python -m pip install twine
        python -m twine check --strict wheelhouse/*.whl
        python -m twine upload wheelhouse/*.whl

  build-sdist:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the release commit
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install Python packages needed for build and upload
      run: |
        python -m pip install build twine

    - name: Build sdist
      run: |
        python -m build --sdist

    - name: Publish to PyPI

      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}

      run: |
        python -m twine check --strict dist/*
        python -m twine upload dist/*
